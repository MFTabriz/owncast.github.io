---
name: Test installation script

on:
  push:
    branches:
      - master
    paths:
      - 'static/install.sh'
  pull_request:
    branches:
      - master
      - v0.1.0
    paths:
      - 'static/install.sh'

jobs:
  shellcheck:
    name: Validate with shellcheck
    runs-on: ubuntu-latest
    env:
      LANG: C.UTF-8
    container:
      image: docker.io/ubuntu:22.04
    steps:
      - uses: actions/checkout@v3

      - name: Install shellcheck
        run: apt update && apt install -y shellcheck && shellcheck --version

      - name: Check Owncast installation bash script
        run: shellcheck --severity=info static/install.sh

  debian:
    name: Install on Debian/Ubuntu
    strategy:
      matrix:
        images:
          - docker.io/debian:latest
          - docker.io/ubuntu:20.04
          - docker.io/ubuntu:22.04
          - docker.io/ubuntu:latest
    runs-on: ubuntu-latest
    container:
      image: ${{matrix.images}}
    steps:
      - uses: actions/checkout@v3

      - name: Install needed packages
        run: |
          apt update &&
          apt install -y curl unzip procps

      - name: Run installation script
        run: static/install.sh

  arch:
    name: Install on Arch
    strategy:
      matrix:
        images:
          - docker.io/archlinux:latest
    runs-on: ubuntu-latest
    container:
      image: ${{matrix.images}}
    steps:
      - uses: actions/checkout@v3

      - name: Install needed packages
        run: pacman -Sy --noconfirm unzip

      - name: Run installation script
        run: static/install.sh

  rhel:
    name: Install on RHEL/Fedora
    strategy:
      matrix:
        images:
          - docker.io/fedora:latest
          - registry.access.redhat.com/ubi7
          - registry.access.redhat.com/ubi8/ubi:8.1
    runs-on: ubuntu-latest
    container:
      image: ${{matrix.images}}
    steps:
      - uses: actions/checkout@v3

      - name: Install needed packages
        run: yum install -y curl unzip procps-ng

      - name: Run installation script
        run: static/install.sh

  opensuse:
    name: Install on OpenSUSE
    strategy:
      matrix:
        images:
          - docker.io/opensuse/leap:latest
          - docker.io/opensuse/tumbleweed:latest
    runs-on: ubuntu-latest
    container:
      image: ${{matrix.images}}
    steps:
      - name: Install needed packages
        run: zypper install -y curl unzip tar gzip

      - uses: actions/checkout@v3

      - name: Run installation script
        run: static/install.sh

  upgrade:
    name: Upgrade on Ubuntu from v
    strategy:
      matrix:
        old_version: [0.0.7, 0.0.8, 0.0.9, 0.0.10, 0.0.11, 0.0.12]
    runs-on: ubuntu-latest
    container:
      image: docker.io/ubuntu:22.04
    env:
      OWNCAST_BACKUP_DIRECTORY: tmpbk
    steps:
      - uses: actions/checkout@v3
      - name: Install needed packages
        run: apt update && apt install -y curl unzip procps
      - name: Install an old version of Owncast
        run: OWNCAST_VERSION=${{ matrix.old_version }} static/install.sh
      - name: Initialize Owncast
        run: cd owncast && timeout 5 ./owncast || true
      - name: Upgrade to the latest version of Owncast
        run: static/install.sh
      - name: Check backup file is created
        run: ls -lAH owncast/data owncast/${OWNCAST_BACKUP_DIRECTORY}/*.tar.gz
      - name: Check backup has the expected content
        run: tar -tf owncast/${OWNCAST_BACKUP_DIRECTORY}/*.tar.gz --wildcards '*/data/owncast\.db*'
